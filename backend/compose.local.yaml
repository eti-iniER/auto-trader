name: auto-trader
services:
    fastapi:
        build: .
        develop:
            watch:
                - action: sync
                  path: .
                  target: /app
                  ignore:
                      - .venv/
                - action: rebuild
                  path: ./pyproject.toml
        entrypoint: ["/app/entrypoint.local.sh"]
        environment:
            - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/postgres
            - DRAMATIQ_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
            - REDIS_URL=redis://redis:6379/0
        ports:
            - 80:80
        env_file:
            - .env
        networks:
            - app-network
        depends_on:
            postgres:
                condition: service_healthy

    dramatiq:
        build: .
        develop:
            watch:
                - action: sync
                  path: .
                  target: /app
                  ignore:
                      - .venv/
                - action: rebuild
                  path: ./pyproject.toml
        command: uv run dramatiq app.tasks --processes 1 --threads 12
        env_file:
            - .env
        environment:
            - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/postgres
            - DRAMATIQ_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
            - REDIS_URL=redis://redis:6379/0
        depends_on:
            fastapi:
                condition: service_started
            rabbitmq:
                condition: service_healthy
        networks:
            - app-network

    periodiq:
        build: .
        develop:
            watch:
                - action: sync
                  path: .
                  target: /app
                  ignore:
                      - .venv/
                - action: rebuild
                  path: ./pyproject.toml
        command: uv run periodiq -v app.tasks
        env_file:
            - .env
        environment:
            - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/postgres
            - DRAMATIQ_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
            - REDIS_URL=redis://redis:6379/0
        depends_on:
            dramatiq:
                condition: service_started
            rabbitmq:
                condition: service_healthy
        networks:
            - app-network

    postgres:
        image: postgres:15
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - app-network
        healthcheck:
            test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

    redis:
        image: redis:8
        ports:
            - "6379:6379"
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

volumes:
    caddy_data:
    caddy_config:
    postgres_data:
    rabbitmq_data:

networks:
    app-network:
