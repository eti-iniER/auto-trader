name: auto-trader
services:
    fastapi:
        image: etinier/auto-trader
        command: uvicorn app.main:app --host 0.0.0.0 --port 80 --reload --log-level trace
        expose:
            - "80"
        volumes:
            - ./:/app
        env_file:
            - .env
        networks:
            - app-network

    dramatiq_worker:
        build: .
        volumes:
            - .:/app
        command: dramatiq app.tasks.broker --processes 1 --threads 1
        env_file:
            - .env
        environment:
            - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/postgres
            - DRAMATIQ_BROKER_URL=amqp://guest:guest@rabbit_mq:5672/
        depends_on:
            fastapi:
                condition: service_started
            rabbit_mq:
                condition: service_healthy
        networks:
            - app-network

    periodiq_scheduler:
        build: .
        volumes:
            - .:/app
        command: periodiq -v app.tasks.broker
        env_file:
            - .env
        environment:
            - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/postgres
            - DRAMATIQ_BROKER_URL=amqp://guest:guest@rabbit_mq:5672/
        depends_on:
            dramatiq_worker:
                condition: service_started
            rabbit_mq:
                condition: service_healthy
        networks:
            - app-network

    postgres:
        image: postgres:15
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    rabbit_mq:
        image: rabbitmq:3-management
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - app-network
        healthcheck:
            test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

volumes:
    caddy_data:
    caddy_config:
    postgres_data:
    rabbitmq_data:

networks:
    app-network:
