"""add more fields to user settings model

Revision ID: f5036ee13c64
Revises: df649c1b5a15
Create Date: 2025-08-05 17:37:00.700128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5036ee13c64'
down_revision: Union[str, Sequence[str], None] = 'df649c1b5a15'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_settings', sa.Column('maximum_open_positions', sa.Integer(), nullable=False, comment='Maximum number of open positions'))
    op.add_column('user_settings', sa.Column('maximum_open_positions_and_pending_orders', sa.Integer(), nullable=False, comment='Maximum open positions and pending orders'))
    op.add_column('user_settings', sa.Column('maximum_alert_age_in_seconds', sa.Integer(), nullable=False, comment='Maximum age of an alert in seconds'))
    op.add_column('user_settings', sa.Column('avoid_dividend_dates', sa.Boolean(), nullable=False, comment='Avoid trading on dividend dates'))
    op.add_column('user_settings', sa.Column('maximum_trades_per_instrument_per_day', sa.Integer(), nullable=False, comment='Maximum trades per instrument per day'))
    op.add_column('user_settings', sa.Column('enforce_maximum_open_positions', sa.Boolean(), nullable=False, comment='Enforce maximum open positions'))
    op.add_column('user_settings', sa.Column('enforce_maximum_open_positions_and_pending_orders', sa.Boolean(), nullable=False, comment='Enforce maximum open positions and pending orders'))
    op.add_column('user_settings', sa.Column('enforce_maximum_alert_age_in_seconds', sa.Boolean(), nullable=False, comment='Enforce maximum alert age in seconds'))
    op.add_column('user_settings', sa.Column('prevent_duplicate_positions_for_instrument', sa.Boolean(), nullable=False, comment='Prevent duplicate positions for the same instrument'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_settings', 'prevent_duplicate_positions_for_instrument')
    op.drop_column('user_settings', 'enforce_maximum_alert_age_in_seconds')
    op.drop_column('user_settings', 'enforce_maximum_open_positions_and_pending_orders')
    op.drop_column('user_settings', 'enforce_maximum_open_positions')
    op.drop_column('user_settings', 'maximum_trades_per_instrument_per_day')
    op.drop_column('user_settings', 'avoid_dividend_dates')
    op.drop_column('user_settings', 'maximum_alert_age_in_seconds')
    op.drop_column('user_settings', 'maximum_open_positions_and_pending_orders')
    op.drop_column('user_settings', 'maximum_open_positions')
    # ### end Alembic commands ###
