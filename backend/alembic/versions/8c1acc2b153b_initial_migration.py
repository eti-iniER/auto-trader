"""initial migration

Revision ID: 8c1acc2b153b
Revises: 
Create Date: 2025-08-11 02:12:49.985939

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c1acc2b153b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logs',
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('UNSPECIFIED', 'AUTHENTICATION', 'ALERT', 'TRADE', 'ORDER', 'ERROR', name='logtype'), nullable=False),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('refresh_token')
    )
    op.create_table('instruments',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('market_and_symbol', sa.String(length=255), nullable=False),
    sa.Column('ig_epic', sa.String(length=255), nullable=False),
    sa.Column('yahoo_symbol', sa.String(length=255), nullable=False),
    sa.Column('atr_stop_loss_period', sa.Integer(), nullable=False),
    sa.Column('atr_stop_loss_multiple_percentage', sa.Numeric(), nullable=False),
    sa.Column('atr_profit_target_period', sa.Integer(), nullable=False),
    sa.Column('atr_profit_multiple_percentage', sa.Numeric(), nullable=False),
    sa.Column('position_size', sa.Integer(), nullable=False),
    sa.Column('max_position_size', sa.Integer(), nullable=True),
    sa.Column('opening_price_multiple_percentage', sa.Numeric(), nullable=False),
    sa.Column('next_dividend_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_settings',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('mode', sa.Enum('DEMO', 'LIVE', name='usersettingsmode'), nullable=False),
    sa.Column('demo_api_key', sa.Text(), nullable=True),
    sa.Column('demo_username', sa.Text(), nullable=True),
    sa.Column('demo_password', sa.Text(), nullable=True),
    sa.Column('demo_webhook_secret', sa.Text(), nullable=True),
    sa.Column('demo_account_id', sa.Text(), nullable=True),
    sa.Column('live_api_key', sa.Text(), nullable=True),
    sa.Column('live_username', sa.Text(), nullable=True),
    sa.Column('live_password', sa.Text(), nullable=True),
    sa.Column('live_webhook_secret', sa.Text(), nullable=True),
    sa.Column('live_account_id', sa.Text(), nullable=True),
    sa.Column('order_type', sa.Enum('LIMIT', 'MARKET', name='usersettingsordertype'), nullable=False),
    sa.Column('maximum_order_age_in_minutes', sa.Integer(), nullable=False, comment='Maximum age of an order in minutes'),
    sa.Column('maximum_open_positions', sa.Integer(), nullable=False, comment='Maximum number of open positions'),
    sa.Column('maximum_open_positions_and_pending_orders', sa.Integer(), nullable=False, comment='Maximum open positions and pending orders'),
    sa.Column('maximum_alert_age_in_seconds', sa.Integer(), nullable=False, comment='Maximum age of an alert in seconds'),
    sa.Column('avoid_dividend_dates', sa.Boolean(), nullable=False, comment='Avoid trading on dividend dates'),
    sa.Column('maximum_trades_per_instrument_per_day', sa.Integer(), nullable=False, comment='Maximum trades per instrument per day'),
    sa.Column('enforce_maximum_open_positions', sa.Boolean(), nullable=False, comment='Enforce maximum open positions'),
    sa.Column('enforce_maximum_open_positions_and_pending_orders', sa.Boolean(), nullable=False, comment='Enforce maximum open positions and pending orders'),
    sa.Column('enforce_maximum_alert_age_in_seconds', sa.Boolean(), nullable=False, comment='Enforce maximum alert age in seconds'),
    sa.Column('prevent_duplicate_positions_for_instrument', sa.Boolean(), nullable=False, comment='Prevent duplicate positions for the same instrument'),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_settings')
    op.drop_table('instruments')
    op.drop_table('users')
    op.drop_table('logs')
    # ### end Alembic commands ###
