//@version=5
indicator('Gap Detection with library one', max_labels_count = 500, overlay = true)

// --- Inputs ---
customText = input.text_area('Ak6dpmB5YWSlFUs3ac56nepuufP5vdsf', title = 'Custom Text')

// --- Imports ---
import TheCuriousCat/TickerLibraryOne/2 as TickerLibraryOne

// --- Functions ---
_rma(src, len) =>
    float wmma3 = na
    wmma3 := ((len - 1) * nz(wmma3[1], src) + src) / len
    wmma3

_atr(l) =>
    _rma(ta.tr(true), int(l))

// --- Variables ---
var string currentTicker = str.replace(ticker.standard(syminfo.tickerid), '_DLY:', ':')

// Example usage of a function from the library
[Y, X] = TickerLibraryOne.YX(currentTicker)

[atr, atr1, atr2, atr3, atr4, atr5, atr6, atr7, atr8, atr9, atr10] = request.security(
     syminfo.tickerid,
     '1D',
     [_atr(X), atr(1), atr(2), atr(3), atr(4), atr(5), atr(6), atr(7), atr(8), atr(9), atr(10)],
     lookahead = barmerge.lookahead_on
     )
atrPercent = atr * (Y / 100)

var float dayHigh = na
var float dayLow = na
var float dayHighPrev = na
var float dayLowPrev = na
var float todayOpen = na

// --- Daily Session Logic ---
if session.isfirstbar_regular
    todayOpen := open
    dayHigh := high
    dayLow := low
    dayHighPrev := dayHigh[1]
    dayLowPrev := dayLow[1]
else
    dayHigh := math.max(dayHigh, high)
    dayLow := math.min(dayLow, low)

// --- Gap Detection Logic ---
upperThreshold = dayHighPrev + atrPercent
lowerThreshold = dayLowPrev - atrPercent

gapUp = todayOpen != todayOpen[1] and todayOpen > upperThreshold
gapDown = todayOpen != todayOpen[1] and todayOpen < lowerThreshold

// Debugging Overrides (consider removing for live use)
gapUp := bar_index % 2 == 0
gapDown := bar_index % 3 == 0

// --- Plots ---
plot(upperThreshold, 'Upper Threshold', color = color.green)
plot(lowerThreshold, 'Lower Threshold', color = color.red)
plot(todayOpen, 'Today Open', color = color.blue)

// --- Alert Logic ---
var string alertMessage = ''

if gapUp and not gapUp[1]
    formattedTime = str.format_time(time)
    alertMessage := str.format(
         '{0} {1} {2} UP {3} {4} {5} {6} {7} {8} {9} {10} {11} {12} {13}',
         formattedTime, customText, ticker.standard(syminfo.tickerid), todayOpen,
         atr1, atr2, atr3, atr4, atr5, atr6, atr7, atr8, atr9, atr10
         )
    if session.isfirstbar_regular
        label.new(
             x = bar_index,
             y = na,
             yloc = yloc.abovebar,
             text = alertMessage,
             color = color.green,
             textcolor = color.white,
             style = label.style_label_down,
             size = size.small
             )
        alert(alertMessage, alert.freq_once_per_bar)

else if gapDown and not gapDown[1]
    formattedTime = str.format_time(time)
    alertMessage := str.format(
         '{0} {1} {2} DOWN {3} {4} {5} {6} {7} {8} {9} {10} {11} {12} {13}',
         formattedTime, customText, ticker.standard(syminfo.tickerid), todayOpen,
         atr1, atr2, atr3, atr4, atr5, atr6, atr7, atr8, atr9, atr10
         )
    if session.isfirstbar_regular
        label.new(
             x = bar_index,
             y = na,
             yloc = yloc.belowbar,
             text = alertMessage,
             color = color.red,
             textcolor = color.white,
             style = label.style_label_up,
             size = size.small
             )
        alert(alertMessage, alert.freq_once_per_bar)